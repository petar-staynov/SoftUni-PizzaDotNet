@using Microsoft.AspNetCore.Identity
@model PizzaDotNet.Web.ViewModels.Products.ProductViewInputModel

@{
    this.ViewData["Title"] = Model.Name;
    var productId = Model.Id;

    var sizesDict = Json.Serialize(Model.Sizes.ToDictionary(k => k.Size, v => v.Price));

    var imageUrl = Model.ImageUrl ?? "~/images/placeholders/320x320.png";
}

<div class="text-center">
    <img src="@Url.Content(@imageUrl)" alt="Image" class="img-fluid"/>

    <form id='ratingForm' method='post' hidden></form>

    <h4>@Model.Name</h4>
    <p>@Model.Description</p>
    <p>
        Rating:
        <span id="product-rating"></span>
    </p>
    @if (User.Identity.IsAuthenticated)
    {
        <p>
            <span>Rate this product:</span>
            <button id="vote-1" onclick="rateProduct(1)">1</button>
            <button id="vote-2" onclick="rateProduct(2)">2</button>
            <button id="vote-3" onclick="rateProduct(3)">3</button>
            <button id="vote-4" onclick="rateProduct(4)">4</button>
            <button id="vote-5" onclick="rateProduct(5)">5</button>
        </p>
    }
    else
    {
        <p>
            <a class="font-weight-bold" asp-area="Identity" asp-page="/Account/Login">Login</a> to rate this product
        </p>
    }
    <hr/>
    <div class="form-group">
        <form method="post" asp-controller="Cart" asp-action="AddItem">
            <div id="sizeButtons">
                @foreach (var size in Model.Sizes)
                {
                    <div class="form-check form-check-inline">
                        <input
                            id="product-size-@size.Size"
                            class="form-check-input"
                            type="radio"
                            name="sizeRadioOption"
                            asp-for="Size"
                            value="@size.Size">
                        <label class="form-check-label" asp-for="@size.Size">@size.Size</label>
                    </div>
                }
            </div>
            <span>Price: <span id="selectedSizePrice">0</span></span>
            <span asp-validation-for="Size" class="text-danger"></span>
            <hr/>
            <div class="form-group row">
                <label asp-for="Quantity" class="col-2 col-form-label"></label>
                <div class="col-10">
                    <input asp-for="Quantity" min="1" class="form-control form-control-sm"/>
                </div>
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <hr/>
            <p class="h5">
                Total: <span id="product-price">1</span> x <span id="product-quantity"></span> = <span id="product-total"></span>
            </p>
            <input type="submit" value="Add to cart" class="btn btn btn-outline-secondary"/>
        </form>
        <div asp-validation-summary="All"></div>
    </div>
</div>

@section Scripts{
    <script>
    let productId = @productId;
    let productSizes = @sizesDict;
    
    $(document).ready(() => {
        //Select the first size
        $('input[name=sizeRadioOption]')[0].checked = true;
        
        //Track for size or quantity change
        $('#productOrderForm').change(function (){
            const selectedSize = $('input[name=sizeRadioOption]:checked').val();
            
            
            let price = productSizes[selectedSize];
            let quantity = $('input[name=Quantity]').val();
            
            const sizePriceDiv = $('#product-price').text(price)
            const selectedSizePriceDiv = $('#selectedSizePrice').text(price);
            const quantityPriceDiv = $('#product-quantity').text(quantity);
            const productTotalPriceDiv = $('#product-total').text(price * quantity);
        })
    });
    
    const updateProductUserRating = (value) => {
        const element = $(`#vote-${value}`);
        element.addClass("btn btn-primary")
    };
    
    const getProductRating = () => {
        const apiUrl = `${window.location.origin}/api/ratings/${productId}`;
        
        $.ajax({
            url: apiUrl,
            type: 'GET',
            success: (res) => {
                const productRating = res.rating;
                if(productRating == 0){
                    $('#product-rating').text("No ratings yet")
                }else{
                    $('#product-rating').text(`${productRating}/5`)
                }
            },
            error: (e) => {
                console.log('error:');
                console.log(e);
            },
        });
    };
    getProductRating();
    
    const getProductUserRating = () => {
        const apiUrl = `${window.location.origin}/api/Rating/UserRating?id=${productId}`;

        $.ajax({
            url: apiUrl,
            type: 'GET',
            success: (res)=>{
                const productRating = res.rating;
                updateProductUserRating(productRating);
            },
            error: (e) => {
                console.log('error:');
                console.log(e);
            },
        });
    };
    getProductUserRating();
    
    const rateProduct = (value) => {
        const token = $("#ratingForm input[name=__RequestVerificationToken]").val();
        
        const apiUrl = `${window.location.origin}/api/ratings`;
        const data = {
            productId: productId,    
            value: value,
            };
        
        $.ajax({
            url: apiUrl,
            type: 'POST',
            data: JSON.stringify(data),
            contentType: 'application/json',
            dataType: 'json',
            headers: {
                'X-CSRF-TOKEN': token,
            },
            success: (res)=>{
                getProductRating();
            },
            error: (e) => {
                console.log('error:');
                console.log(e);
                getProductRating();
                getProductUserRating();
            },
        });
    };
</script>
}