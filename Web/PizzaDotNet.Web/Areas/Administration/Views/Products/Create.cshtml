@model PizzaDotNet.Web.ViewModels.Administration.Products.AdminProductCreateInputModel;
@using PizzaDotNet.Web.ViewModels.Administration.Products
@{
    this.ViewData["Title"] = "Create product";
    var categoriesListItems =
        Model.Categories.Select(x => new SelectListItem(x.Name, x.Id.ToString()));

    var sizesList = Model.Sizes;
    int maxNumberOfSizes = PizzaDotNet.Common.GlobalConstants.MaxNumberOfProductSizes;
    for (int i = 0; i < maxNumberOfSizes; i++)
    {
        sizesList.Add(new AdminProductCreateSizeInputModel());
    }
}

<h1>Create product</h1>
<form method="post" asp-action="Create" enctype="multipart/form-data">
    <div class="form-group">
        <div asp-validation-summary="All"></div>
    </div>

    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <input asp-for="Description" class="form-control"/>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label class="control-label">Sizes:</label>
        <div id="productSizeInput">
            @for (int i = 0; i < maxNumberOfSizes; i++)
            {
                <div class="input-group mb-3">
                    <input type="text" class="form-control" placeholder="Size" asp-for="@Model.Sizes[i].Name">
                    <input type="number" class="form-control" placeholder="Price" asp-for="@Model.Sizes[i].Price">
                    <span asp-validation-for="@Model.Sizes[i]"></span>
                </div>
            }
            <button class="btn btn-outline-secondary" type="button" onclick="addSizeField()">Add size</button>
            <button class="btn btn-outline-secondary" type="button" onclick="removeSizeField()">Remove size</button>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="CategoryId"></label>
        <select asp-for="CategoryId" asp-items="categoriesListItems" class="form-control"></select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ImageModel.ImageFile" class="control-label"></label>
        <input asp-for="ImageModel.ImageFile" class="form-control-file" onchange="readImage(this)"/>
        <span asp-validation-for="ImageModel.ImageFile" class="text-danger"></span>
        <br/>
        <img id="imageContainer" src="~/images/placeholders/320x320.png" alt="product image"/>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary"/>
    </div>
</form>

@section Scripts{
    <script>     
        let maxNumberOfSizes = @maxNumberOfSizes;   
        const sizeDivs = $('#productSizeInput').children('.input-group').slice(1);

        const hideSizesFields = () => {
            sizeDivs.each(index => {
                const element = sizeDivs[index];
                $(element).attr("hidden", 'true');
            });
        };
        hideSizesFields();
        
        
        let sizeNumber = 0;
        const addSizeField = () => {
            if(sizeNumber >= maxNumberOfSizes - 1){
                alert(`Cant add more than ${maxNumberOfSizes} sizes`);
                return
            }
            
            const sizeElement = sizeDivs[sizeNumber];
            sizeElement.removeAttribute('hidden');
            
            sizeNumber++;
        };
        
        const removeSizeField = () => {
            if (sizeNumber <= 0 ){
                return;
            }
            
            const sizeElement = sizeDivs[sizeNumber - 1];
            sizeElement.setAttribute('hidden', 'true');
            
            const inputs = $(sizeElement).children();
            inputs[0].value = '';
            inputs[1].value = -1;
            
            sizeNumber--;
        };
        
        const readImage = (input) => {
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                
                reader.onload = (e) => {
                    $('#imageContainer')
                        .attr('src', e.target.result)
                        .width("auto")
                        .height(320);
                };
                
                reader.readAsDataURL(input.files[0]);
             }
        };
    </script>
}